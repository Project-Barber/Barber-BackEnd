CREATE TABLE clientes (
    id SERIAL CONSTRAINT pk_clientes PRIMARY KEY,
    nome VARCHAR(100) NOT NULL CHECK (LENGTH(nome) > 2),
    telefone VARCHAR(15) CHECK (telefone ~ '^[0-9]+$'),
    email VARCHAR(100) UNIQUE CHECK (email ~ '^[^@]+@[^@]+\.[^@]+$'),
    data_nascimento DATE NOT NULL CHECK (data_nascimento <= CURRENT_DATE)
);

CREATE TABLE barbeiros (
    id SERIAL CONSTRAINT pk_barbeiros PRIMARY KEY,
    nome VARCHAR(100) NOT NULL CHECK (LENGTH(nome) > 2)
);

CREATE TABLE produtos (
    id SERIAL CONSTRAINT pk_produtos PRIMARY KEY,
    nome VARCHAR(100) NOT NULL CHECK (LENGTH(nome) > 2),
    preco NUMERIC(10, 2) NOT NULL CHECK (preco > 0),
    categoria VARCHAR(50) NOT NULL CHECK (categoria IN ('Bebida', 'Cabelo', 'Pele','Barba'))
);

CREATE TABLE agendamentos (
    id SERIAL CONSTRAINT pk_agendamentos PRIMARY KEY,
    cliente_id INT REFERENCES clientes(id) ON DELETE CASCADE,
    barbeiro_id INT REFERENCES barbeiros(id) ON DELETE CASCADE,
    data_hora TIMESTAMP NOT NULL CHECK (data_hora >= CURRENT_TIMESTAMP),
    status VARCHAR(50) DEFAULT 'Pendente' CHECK (status IN ('Pendente', 'ConcluÃ­do', 'Cancelado'))
);

CREATE TABLE produtos_comprados (
    id SERIAL CONSTRAINT pk_produtos_comprados PRIMARY KEY,
    agendamento_id INT REFERENCES agendamentos(id) ON DELETE CASCADE,
    produto_id INT REFERENCES produtos(id) ON DELETE CASCADE,
    quantidade INT NOT NULL CHECK (quantidade > 0)
);